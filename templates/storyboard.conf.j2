[DEFAULT]
# Default log level is INFO
# verbose and debug has the same result.
# One of them will set DEBUG log level output
# debug = False
# verbose = False

# Where to store lock files
lock_path = $state_path/lock

# Storyboard's working directory. Please ensure that the storyboard user has
# read/write access to this directory.
working_directory = {{ storyboard_working_root }}

# log_format = %(asctime)s %(levelname)8s [%(name)s] %(message)s
# log_date_format = %Y-%m-%d %H:%M:%S

# use_syslog                           -> syslog
# log_file and log_dir                 -> log_dir/log_file
# (not log_file) and log_dir           -> log_dir/{binary_name}.log
# use_stderr                           -> stderr
# (not user_stderr) and (not log_file) -> stdout
# publish_errors                       -> notification system

# use_syslog = False
# syslog_log_facility = LOG_USER

# use_stderr = True
# log_file =
# log_dir =

# publish_errors = False

# Address to bind the API server
# bind_host = 0.0.0.0

# Port the bind the API server to
# bind_port = 8080

# List paging configuration options.
# page_size_maximum = 500
# page_size_default = 20

# Enable notifications. This feature drives deferred processing, reporting,
# and subscriptions.
enable_notifications = {{ storyboard_enable_notifications }}

[oauth]
# StoryBoard's oauth configuration.

# OpenId Authentication endpoint
openid_url = {{ storyboard_openid_url }}

# Time in seconds before an authorization code expires.
authorization_code_ttl = {{ storyboard_authorization_code_ttl }}

# Time in seconds before an access_token expires
access_token_ttl = {{ storyboard_access_token_ttl }}

# Time in seconds before an refresh_token expires
refresh_token_ttl = {{ storyboard_refresh_token_ttl }}

# A list of valid client id's that may connect to StoryBoard.
valid_oauth_clients = {{ storyboard_valid_oauth_clients|join(',') }}


[scheduler]
# Storyboard's scheduled task management configuration

# Enable or disable scheduling (Default disabled)
enable = {{ storyboard_enable_scheduler }}


[cron]
# Storyboard's cron management configuration

# Enable or disable cron (Default disabled)
enable = {{ storyboard_enable_cron }}

{% if storyboard_cors_allowed_origins_string is defined %}
[cors]
# W3C CORS configuration. For more information, see http://www.w3.org/TR/cors/

# List of permitted CORS domains.
allowed_origins = {{ storyboard_cors_allowed_origins_string }}

# CORS browser options cache max age (in seconds)
max_age={{ storyboard_cors_max_age }}

{% endif %}

[database]
# This line MUST be changed to actually run storyboard
# Example:
# connection = mysql://root:pass@127.0.0.1:3306/storyboard
# Replace 127.0.0.1 above with the IP address of the database used by the
# main storyboard server. (Leave it as is if the database runs on this host.)
connection=mysql+pymysql://{{ storyboard_mysql_user }}:{{ storyboard_mysql_user_password }}@{{ storyboard_mysql_host }}:{{ storyboard_mysql_port }}/{{ storyboard_mysql_database }}

# The SQLAlchemy connection string used to connect to the slave database
# slave_connection =

# Database reconnection retry times - in event connectivity is lost
# set to -1 implies an infinite retry count
# max_retries = 10

# Database reconnection interval in seconds - if the initial connection to the
# database fails
# retry_interval = 10

# Minimum number of SQL connections to keep open in a pool
# min_pool_size = 1

# Maximum number of SQL connections to keep open in a pool
# max_pool_size = 10

# Timeout in seconds before idle sql connections are reaped
# idle_timeout = 3600

# If set, use this value for max_overflow with sqlalchemy
# max_overflow = 20

# Verbosity of SQL debugging information. 0=None, 100=Everything
# connection_debug = 0

# Add python stack traces to SQL as comment strings
# connection_trace = False

# If set, use this value for pool_timeout with sqlalchemy
# pool_timeout = 10

[notifications]

# Host of the rabbitmq server.
rabbit_host={{ storyboard_rabbitmq_host }}

# The RabbitMQ login method
rabbit_login_method = AMQPLAIN

# The RabbitMQ userid.
rabbit_userid = {{ storyboard_rabbitmq_user }}

# The RabbitMQ password.
rabbit_password = {{ storyboard_rabbitmq_user_password }}

# The RabbitMQ broker port where a single node is used.
rabbit_port = {{ storyboard_rabbitmq_port }}

# The virtual host within which our queues and exchanges live.
rabbit_virtual_host = {{ storyboard_rabbitmq_vhost }}

[plugin_token_cleaner]
# Enable/Disable the token cleaning cron plugin. This requires cron
# management to be enabled.
enable = {{ storyboard_enable_token_cleanup }}

[plugin_email]
# Enable, or disable, the notification email plugin.
enable = {{ storyboard_enable_email }}

{% if storyboard_enable_email=='True' %}
# The email address from which storyboard will send its messages.
sender = {{ storyboard_email_sender }}

{% if storyboard_email_reply_to is defined %}
# The email address of the Reply-To header (optional).
reply_to = {{ storyboard_email_reply_to }}
{% endif %}

# The SMTP server to use.
smtp_host = {{ storyboard_email_smtp_host }}

{% if storyboard_email_smtp_port is defined %}
# The SMTP Server Port to connect to (default 25).
smtp_port = {{ storyboard_email_smtp_port }}
{% endif %}

# The SMTP socket timeout, in seconds
smtp_timeout = {{ storyboard_email_smtp_timeout }}

{% if storyboard_email_smtp_local_hostname is defined %}
# The FQDN of the sending host when identifying itself to the SMTP server
# (optional).
smtp_local_hostname = {{ storyboard_email_smtp_local_hostname }}
{% endif %}

{% if storyboard_email_smtp_ssl_keyfile is defined %}
# Path to the SSL Keyfile, when using ESMTP. Please make sure the storyboard
# client can read this file.
smtp_ssl_keyfile = {{ storyboard_email_smtp_ssl_keyfile }}
{% endif %}

{% if storyboard_email_smtp_ssl_certfile is defined %}
# Path to the SSL Certificate, when using ESMTP. Please make sure the
# storyboard client can read this file.
smtp_ssl_certfile = {{ storyboard_email_smtp_ssl_certfile }}
{% endif %}

{% if storyboard_email_smtp_user is defined %}
# Username/login for the SMTP server.
smtp_user = {{ storyboard_email_smtp_user }}
{% endif %}

{% if storyboard_email_smtp_password is defined %}
# Password for the SMTP server.
smtp_password = {{ storyboard_email_smtp_password }}
{% endif %}

{% endif %}
